!function(i){"object"==typeof module&&module.exports?module.exports=i.default=i:"function"==typeof define&&define.amd?define("highcharts/modules/pyramid3d",["highcharts","highcharts/highcharts-3d","highcharts/modules/cylinder","highcharts/modules/funnel3d"],function(e){return i(e),i.Highcharts=e,i}):i("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function i(e,i,t,s){e.hasOwnProperty(i)||(e[i]=s.apply(null,t),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:i,module:e[i]}})))}i(e,"Series/Pyramid3D/Pyramid3DSeriesDefaults.js",[],function(){return{reversed:!0,neckHeight:0,neckWidth:0,dataLabels:{verticalAlign:"top"}}}),i(e,"Series/Pyramid3D/Pyramid3DSeries.js",[e["Series/Pyramid3D/Pyramid3DSeriesDefaults.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,i,t){let s=i.seriesTypes["funnel3d"],r=t["merge"];class d extends s{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}}return d.defaultOptions=r(s.defaultOptions,e),i.registerSeriesType("pyramid3d",d),d}),i(e,"masters/modules/pyramid3d.src.js",[],function(){})});