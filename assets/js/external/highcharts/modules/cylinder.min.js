"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/cylinder",["highcharts","highcharts/highcharts-3d"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){function t(e,t,s,r){e.hasOwnProperty(t)||(e[t]=r.apply(null,s),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e=e?e._modules:{},"Series/Cylinder/CylinderPoint.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t){({column:{prototype:{pointClass:e}}}=e.seriesTypes),t=t.extend;class s extends e{constructor(){super(...arguments),this.series=this.options=void 0}}return t(s.prototype,{shapeType:"cylinder"}),s}),t(e,"Series/Cylinder/CylinderComposition.js",[e["Core/Color/Color.js"],e["Core/Globals.js"],e["Core/Math3D.js"],e["Core/Renderer/RendererRegistry.js"],e["Core/Utilities.js"]],function(e,t,s,r,i){const n=e["parse"],{charts:o,deg2rad:f}=t,g=s["perspective"],{merge:h,pick:x}=i,u=(e=r.getRendererType().prototype).cuboidPath,d=e=>!e.some(e=>"C"===e[0]);t=h(e.elements3d.cuboid,{parts:["top","bottom","front","back"],pathType:"cylinder",fillSetter:function(e){return this.singleSetterForParts("fill",null,{front:e,back:e,top:n(e).brighten(.1).get(),bottom:n(e).brighten(-.1).get()}),this.color=this.fill=e,this}}),e.elements3d.cylinder=t,e.cylinder=function(e){return this.element3d("cylinder",e)},e.cylinderPath=function(e){var t=o[this.chartIndex],s=u.call(this,e),r=!s.isTop,i=!s.isFront,n=this.getCylinderEnd(t,e);return e=this.getCylinderEnd(t,e,!0),{front:this.getCylinderFront(n,e),back:this.getCylinderBack(n,e),top:n,bottom:e,zIndexes:{top:r?3:0,bottom:r?0:3,front:i?2:1,back:i?1:2,group:s.zIndexes.group}}},e.getCylinderFront=function(e,t){var s,r;return e=e.slice(0,3),d(t)?"M"===(s=t[0])[0]&&(e.push(t[2]),e.push(t[1]),e.push(["L",s[1],s[2]])):(s=t[0],r=t[1],t=t[2],"M"===s[0]&&"C"===r[0]&&"C"===t[0]&&(e.push(["L",t[5],t[6]]),e.push(["C",t[3],t[4],t[1],t[2],r[5],r[6]]),e.push(["C",r[3],r[4],r[1],r[2],s[1],s[2]]))),e.push(["Z"]),e},e.getCylinderBack=function(e,t){const s=[];if(d(e)){var r=e[0];const t=e[2];"M"===r[0]&&"L"===t[0]&&(s.push(["M",t[1],t[2]]),s.push(e[3]),s.push(["L",r[1],r[2]]))}else"C"===e[2][0]&&s.push(["M",e[2][5],e[2][6]]),s.push(e[3],e[4]);return d(t)?"M"===(e=t[0])[0]&&(s.push(["L",e[1],e[2]]),s.push(t[3]),s.push(t[2])):(e=t[2],r=t[3],t=t[4],"C"===e[0]&&"C"===r[0]&&"C"===t[0]&&(s.push(["L",t[5],t[6]]),s.push(["C",t[3],t[4],t[1],t[2],r[5],r[6]]),s.push(["C",r[3],r[4],r[1],r[2],e[5],e[6]]))),s.push(["Z"]),s},e.getCylinderEnd=function(e,t,s){var{width:r=0,height:i=0,alphaCorrection:n=0}=t,o=x(t.depth,r,0),h=Math.min(r,o)/2,n=f*(e.options.chart.options3d.beta-90+n);s=(t.y||0)+(s?i:0);let u=.5519*h,d=r/2+(t.x||0),l=o/2+(t.z||0),p=[{x:0,y:s,z:h},{x:u,y:s,z:h},{x:h,y:s,z:u},{x:h,y:s,z:0},{x:h,y:s,z:-u},{x:u,y:s,z:-h},{x:0,y:s,z:-h},{x:-u,y:s,z:-h},{x:-h,y:s,z:-u},{x:-h,y:s,z:0},{x:-h,y:s,z:u},{x:-u,y:s,z:h},{x:0,y:s,z:h}],c=Math.cos(n),y=Math.sin(n),a,C;return p.forEach(function(e,t){a=e.x,C=e.z,p[t].x=a*c-C*y+d,p[t].z=C*c+a*y+l}),e=g(p,e,!0),Math.abs(e[3].y-e[9].y)<2.5&&Math.abs(e[0].y-e[6].y)<2.5?this.toLinePath([e[0],e[3],e[6],e[9]],!0):this.getCurvedPath(e)},e.getCurvedPath=function(e){let t=[["M",e[0].x,e[0].y]],s=e.length-2,r;for(r=1;r<s;r+=3)t.push(["C",e[r].x,e[r].y,e[r+1].x,e[r+1].y,e[r+2].x,e[r+2].y]);return t}}),t(e,"Series/Cylinder/CylinderSeries.js",[e["Series/Cylinder/CylinderPoint.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t,s){const{column:r}=t["seriesTypes"],{extend:i,merge:n}=s;class o extends r{constructor(){super(...arguments),this.points=this.options=this.data=void 0}}return o.defaultOptions=n(r.defaultOptions),i(o.prototype,{pointClass:e}),t.registerSeriesType("cylinder",o),o}),t(e,"masters/modules/cylinder.src.js",[],function(){})});