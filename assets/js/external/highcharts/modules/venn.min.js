"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/venn",["highcharts"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){function t(e,t,r,n){e.hasOwnProperty(t)||(e[t]=n.apply(null,r),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e=e?e._modules:{},"Core/Geometry/GeometryUtilities.js",[],function(){var e,t;return(t=e=e||{}).getCenterOfPoints=function(e){var t=e.reduce((e,t)=>(e.x+=t.x,e.y+=t.y,e),{x:0,y:0});return{x:t.x/e.length,y:t.y/e.length}},t.getDistanceBetweenPoints=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},t.getAngleBetweenPoints=function(e,t){return Math.atan2(t.x-e.x,t.y-e.y)},e}),t(e,"Core/Geometry/CircleUtilities.js",[e["Core/Geometry/GeometryUtilities.js"]],function(e){const{getAngleBetweenPoints:c,getCenterOfPoints:l,getDistanceBetweenPoints:u}=e;var t;function f(e,t){return t=Math.pow(10,t),Math.round(e*t)/t}function i(e){if(e<=0)throw Error("radius of circle must be a positive number.");return Math.PI*e*e}function s(e,t){return e*e*Math.acos(1-t/e)-(e-t)*Math.sqrt(t*(2*e-t))}function a(e,t){var r,n,i=u(e,t),s=e.r,o=t.r,a=[];return i<s+o&&i>Math.abs(s-o)&&(r=((s*=s)-o*o+i*i)/(2*i),o=Math.sqrt(s-r*r),s=e.x,a=t.x,e=e.y,n=t.y,t=s+r*(a-s)/i,r=e+r*(n-e)/i,e=o/i*-(n-e),i=o/i*-(a-s),a=[{x:f(t+e,14),y:f(r-i,14)},{x:f(t-e,14),y:f(r+i,14)}]),a}function r(e){return e.reduce((e,s,o,t)=>(t=t.slice(o+1).reduce((e,t,r,n)=>{const i=[o,r+o+1];return e.concat(a(s,t).map(e=>(e.indexes=i,e)))},[]),e.concat(t)),[])}function n(e,t){return u(e,t)<=t.r+1e-10}function o(t,e){return!e.some(function(e){return!n(t,e)})}function h(t){return r(t).filter(function(e){return o(e,t)})}return(e=t=t||{}).round=f,e.getAreaOfCircle=i,e.getCircularSegmentArea=s,e.getOverlapBetweenCircles=function(e,t,r){var n=0;return n=r<e+t?f(n=r<=Math.abs(t-e)?i(e<t?e:t):(r-=n=(e*e-t*t+r*r)/(2*r),s(e,e-n)+s(t,t-r)),14):n},e.getCircleCircleIntersection=a,e.getCirclesIntersectionPoints=r,e.isCircle1CompletelyOverlappingCircle2=function(e,t){return u(e,t)+t.r<e.r+1e-10},e.isPointInsideCircle=n,e.isPointInsideAllCircles=o,e.isPointOutsideAllCircles=function(t,e){return!e.some(function(e){return n(t,e)})},e.getCirclesIntersectionPolygon=h,e.getAreaOfIntersectionBetweenCircles=function(a){let e;if(1<(t=h(a)).length){const n=l(t);var t,r=(t=t.map(function(e){return e.angle=c(n,e),e}).sort(function(e,t){return t.angle-e.angle}))[t.length-1];0!==(t=t.reduce(function(e,i){const s=e["startPoint"],o=l([s,i]),t=i.indexes.filter(function(e){return-1<s.indexes.indexOf(e)}).reduce(function(e,t){t=a[t];var r=c(t,i),n=c(t,s),r=n-(n-r+(n<r?2*Math.PI:0))/2;return r=u(o,{x:t.x+t.r*Math.sin(r),y:t.y+t.r*Math.cos(r)}),t=t["r"],2*t<r&&(r=2*t),e=!e||e.width>r?{r:t,largeArc:t<r?1:0,width:r,x:i.x,y:i.y}:e},null);if(t){const a=t["r"];e.arcs.push(["A",a,a,0,t.largeArc,1,t.x,t.y]),e.startPoint=i}return e},{startPoint:r,arcs:[]}).arcs).length&&1!==t.length&&(t.unshift(["M",r.x,r.y]),e={center:n,d:t})}return e},t}),t(e,"Series/DrawPointUtilities.js",[e["Core/Utilities.js"]],function(e){return{draw:function(e,t){const{animatableAttribs:r,onComplete:n,css:i,renderer:s}=t,o=e.series&&e.series.chart.hasRendered?void 0:e.series&&e.series.options.animation;let a=e.graphic;if(t.attribs=Object.assign(Object.assign({},t.attribs),{class:e.getClassName()})||{},e.shouldDraw())a||(e.graphic=a="text"===t.shapeType?s.text():s[t.shapeType](t.shapeArgs||{}),a.add(t.group)),i&&a.css(i),a.attr(t.attribs).animate(r,!t.isNew&&o,n);else if(a){const t=()=>{e.graphic=a=a&&a.destroy(),"function"==typeof n&&n()};Object.keys(r).length?a.animate(r,void 0,()=>t()):t()}}}}),t(e,"Series/Venn/VennPoint.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t){({scatter:{prototype:{pointClass:e}}}=e.seriesTypes);const r=t["isNumber"];class n extends e{constructor(){super(...arguments),this.series=this.options=void 0}isValid(){return r(this.value)}shouldDraw(){return!!this.shapeArgs}}return n}),t(e,"Series/Venn/VennUtils.js",[e["Core/Geometry/CircleUtilities.js"],e["Core/Geometry/GeometryUtilities.js"],e["Core/Utilities.js"]],function(e,t,r){function n(e){const i={};return e.filter(e=>2===e.sets.length).forEach(n=>{n.sets.forEach((e,t,r)=>{b(i[e])||(i[e]={totalOverlap:0,overlapping:{}}),i[e]={totalOverlap:(i[e].totalOverlap||0)+n.value,overlapping:Object.assign(Object.assign({},i[e].overlapping||{}),{[r[1-t]]:n.value})}})}),e.filter(s).forEach(e=>{m(e,i[e.sets[0]])}),e}function a(e,t,r,n,i){var s=e(t),o=e(r);i=i||100,n=n||1e-10;let a=r-t,c=1,l,u;if(r<=t)throw Error("a must be smaller than b.");if(0<s*o)throw Error("f(a) and f(b) must have opposite signs.");if(0===s)l=t;else if(0===o)l=r;else for(;c++<=i&&0!==u&&a>n;)a=(r-t)/2,l=t+a,0<s*(u=e(l))?t=l:r=l;return l}function u(t){function r(e,t){return e.sum+=t[e.i],e}const n=(t=t.slice(0,-1)).length,i=[];for(let e=0;e<n;e++)i[e]=t.reduce(r,{sum:0,i:e}).sum/n;return i}function h(t,r,n){var e=t+r;return n<=0?e:c(t<r?t:r)<=n?0:a(e=>(e=l(t,r,e),n-e),0,e)}function s(e){return v(e.sets)&&1===e.sets.length}function o(e){const r={};return b(e)&&C(e.value)&&-1<e.value&&v(e.sets)&&0<e.sets.length&&!e.sets.some(function(e){let t=!1;return!r[e]&&O(e)?r[e]=!0:t=!0,t})}function p(s,e){return e.reduce(function(e,t){var r,n,i=0;return 1<t.sets.length&&(i=t.value,r=t.sets.map(function(e){return s[e]}),n=0,2===r.length&&(n=r[0],r=r[1],n=l(n.r,r.r,x(n,r))),t=i-(t=n),i=Math.round(t*t*1e11)/1e11),e+i},0)}function i(e,t){return void 0!==t.totalOverlap&&void 0!==e.totalOverlap?t.totalOverlap-e.totalOverlap:NaN}const{getAreaOfCircle:c,getCircleCircleIntersection:d,getOverlapBetweenCircles:l,isPointInsideAllCircles:f,isPointInsideCircle:y,isPointOutsideAllCircles:g}=e,x=t["getDistanceBetweenPoints"],{extend:m,isArray:v,isNumber:C,isObject:b,isString:O}=r;return{geometry:t,geometryCircles:e,addOverlapToSets:n,getCentroid:u,getDistanceBetweenCirclesByOverlap:h,getLabelWidth:function(i,s,e){const t=s.reduce((e,t)=>Math.min(t.r,e),1/0),o=e.filter(function(e){return!y(i,e)});return e=function(r,n){return a(function(e){var t={x:i.x+n*e,y:i.y},t=f(t,s)&&g(t,o);return-(r-e)+(t?0:Number.MAX_VALUE)},0,r)},2*Math.min(e(t,-1),e(t,1))},getMarginFromCircles:function(r,e,t){return e=e.reduce(function(e,t){return(t=t.r-x(r,t))<=e?t:e},Number.MAX_VALUE),t.reduce(function(e,t){return(t=x(r,t)-t.r)<=e?t:e},e)},isSet:s,layoutGreedyVenn:function(e){function r(e,t){const r=e.circle;r&&(r.x=t.x,r.y=t.y),l.push(e)}const l=[],u={},t=(e.filter(function(e){return 1===e.sets.length}).forEach(function(e){u[e.sets[0]]=e.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(e.value/Math.PI)}}),n(e),e.filter(s).sort(i)),f=(r(t.shift(),{x:0,y:0}),e.filter(function(e){return 2===e.sets.length}));return t.forEach(function(e){const o=e.circle;var a,c,t;o&&(a=o.r,c=e.overlapping,t=l.reduce((r,e,t)=>{const n=e.circle;if(!n||!c)return r;const i=h(a,n.r,c[e.sets[0]]);let s=[{x:n.x+i,y:n.y},{x:n.x-i,y:n.y},{x:n.x,y:n.y+i},{x:n.x,y:n.y-i}];return l.slice(t+1).forEach(function(e){var t=e.circle;t&&(e=h(a,t.r,c[e.sets[0]]),s=s.concat(d({x:n.x,y:n.y,r:i},{x:t.x,y:t.y,r:e})))}),s.forEach(function(e){o.x=e.x,o.y=e.y;var t=p(u,f);t<r.loss&&(r.loss=t,r.coordinates=e)}),r},{loss:Number.MAX_VALUE,coordinates:void 0}),r(e,t.coordinates))}),u},loss:p,nelderMead:function(i,t){function r(e,t){return e.fx-t.fx}const s=(r,e,n,i)=>e.map((e,t)=>r*e+n*i[t]),n=(e,t)=>(t.fx=i(t),e[e.length-1]=t,e),o=e=>{const t=e[0];return e.map(e=>((e=s(.5,t,.5,e)).fx=i(e),e))},a=(e,t,r,n)=>((e=s(r,e,n,t)).fx=i(e),e);t=(t=>{const r=t.length,n=Array(r+1);n[0]=t,n[0].fx=i(t);for(let e=0;e<r;++e){const r=t.slice();r[e]=r[e]?1.05*r[e]:.001,r.fx=i(r),n[e+1]=r}return n})(t);for(let e=0;e<100;e++){t.sort(r);var c=t[t.length-1],l=u(t);const i=a(l,c,2,-1);t=i.fx<t[0].fx?n(t,(c=a(l,c,3,-2)).fx<i.fx?c:i):i.fx>=t[t.length-2].fx?i.fx>c.fx?(l=a(l,c,.5,.5)).fx<c.fx?n(t,l):o(t):(l=a(l,c,1.5,-.5)).fx<i.fx?n(t,l):o(t):n(t,i)}return t[0]},processVennData:function(e,i){const r=(e=v(e)?e:[]).reduce(function(e,t){var r;return(r=(r=t.sets)?o(t)&&s(t)&&0<t.value:r)&&-1===e.indexOf(t.sets[0])&&e.push(t.sets[0]),e},[]).sort(),n=e.reduce(function(e,t){return t.sets&&o(t)&&!t.sets.some(function(e){return-1===r.indexOf(e)})&&(e[t.sets.sort().join(i)]={sets:t.sets,value:t.value||0}),e},{});return r.reduce(function(t,r,e,n){return n.slice(e+1).forEach(function(e){t.push(r+i+e)}),t},[]).forEach(function(e){var t;n[e]||(t={sets:e.split(i),value:0},n[e]=t)}),Object.keys(n).map(function(e){return n[e]})},sortByTotalOverlap:i}}),t(e,"Series/Venn/VennSeries.js",[e["Core/Animation/AnimationUtilities.js"],e["Core/Color/Color.js"],e["Core/Geometry/CircleUtilities.js"],e["Series/DrawPointUtilities.js"],e["Core/Geometry/GeometryUtilities.js"],e["Core/Series/SeriesRegistry.js"],e["Series/Venn/VennPoint.js"],e["Series/Venn/VennUtils.js"],e["Core/Utilities.js"]],function(e,t,r,a,n,i,s,h,o){const c=e["animObject"],l=t["parse"],{getAreaOfIntersectionBetweenCircles:u,getCirclesIntersectionPolygon:f,isCircle1CompletelyOverlappingCircle2:p,isPointInsideAllCircles:d,isPointOutsideAllCircles:y}=r,g=n["getCenterOfPoints"],{scatter:x}=i["seriesTypes"],{addEvent:m,extend:v,isArray:C,isNumber:b,isObject:O,merge:A}=o;class j extends x{constructor(){super(...arguments),this.points=this.options=this.mapOfIdToRelation=this.data=void 0}static getLabelPosition(n,i){var e=n.reduce((e,t)=>{var r=t.r/2;return[{x:t.x,y:t.y},{x:t.x+r,y:t.y},{x:t.x-r,y:t.y},{x:t.x,y:t.y+r},{x:t.x,y:t.y-r}].reduce((e,t)=>{var r=h.getMarginFromCircles(t,n,i);return e.margin<r&&(e.point=t,e.margin=r),e},e)},{point:void 0,margin:-Number.MAX_VALUE}).point;return e={x:(e=h.nelderMead(function(e){return-h.getMarginFromCircles({x:e[0],y:e[1]},n,i)},[e.x,e.y]))[0],y:e[1]},e=d(e,n)&&y(e,i)?e:1<n.length?g(f(n)):{x:n[0].x,y:n[0].y}}static getLabelValues(e,t){const n=e.sets,r=t.reduce((e,t)=>{var r=-1<n.indexOf(t.sets[0]);return t.circle&&e[r?"internal":"external"].push(t.circle),e},{internal:[],external:[]});return r.external=r.external.filter(t=>r.internal.some(e=>!p(t,e))),{position:e=j.getLabelPosition(r.internal,r.external),width:t=h.getLabelWidth(e,r.internal,r.external)}}static layout(e){const n={},i={};if(0<e.length){const s=h.layoutGreedyVenn(e),o=e.filter(h.isSet);e.forEach(function(e){var t=e.sets,r=t.join();(t=h.isSet(e)?s[r]:u(t.map(e=>s[e])))&&(n[r]=t,i[r]=j.getLabelValues(e,o))})}return{mapOfIdToShape:n,mapOfIdToLabelValues:i}}static getScale(e,t,r){var n=r.bottom-r.top,i=r.right-r.left;return{scale:n=Math.min(0<i?1/i*e:1,0<n?1/n*t:1),centerX:e/2-(r.right+r.left)/2*n,centerY:t/2-(r.top+r.bottom)/2*n}}static updateFieldBoundaries(e,t){var r=t.x-t.r,n=t.x+t.r,i=t.y+t.r;return t=t.y-t.r,(!b(e.left)||e.left>r)&&(e.left=r),(!b(e.right)||e.right<n)&&(e.right=n),(!b(e.top)||e.top>t)&&(e.top=t),(!b(e.bottom)||e.bottom<i)&&(e.bottom=i),e}animate(i){if(!i){const i=c(this.options.animation);this.points.forEach(function(e){var t=e.shapeArgs;if(e.graphic&&t){const r={},n={};t.d?r.opacity=.001:(r.r=0,n.r=t.r),e.graphic.attr(r).animate(n,i),t.d&&setTimeout(function(){e&&e.graphic&&e.graphic.animate({opacity:1})},i.duration)}},this)}}drawPoints(){const n=this,i=n.chart,s=n.group,o=i.renderer;(n.points||[]).forEach(function(e){var t={zIndex:C(e.sets)?e.sets.length:0},r=e.shapeArgs;i.styledMode||v(t,n.pointAttribs(e,e.state)),a.draw(e,{isNew:!e.graphic,animatableAttribs:r,attribs:t,group:s,renderer:o,shapeType:r&&r.d?"path":"circle"})})}init(){x.prototype.init.apply(this,arguments),delete this.opacity}pointAttribs(e,t){var r=this.options||{};return e=A(r,{color:e&&e.color},e&&e.options||{},t&&r.states[t]||{}),{fill:l(e.color).brighten(e.brightness).get(),opacity:e.opacity,stroke:e.borderColor,"stroke-width":e.borderWidth,dashstyle:e.borderDashStyle}}translate(){var e=this.chart,t=(this.processedXData=this.xData,this.generatePoints(),h.processVennData(this.options.data,j.splitter));const{mapOfIdToShape:a,mapOfIdToLabelValues:c}=j.layout(t),l=(t=Object.keys(a).filter(function(e){return(e=a[e])&&b(e.r)}).reduce(function(e,t){return j.updateFieldBoundaries(e,a[t])},{top:0,bottom:0,left:0,right:0}),(e=j.getScale(e.plotWidth,e.plotHeight,t)).scale),u=e.centerX,f=e.centerY;this.points.forEach(function(e){let t=C(e.sets)?e.sets:[];var r=t.join(),n=a[r];let i;var r=(s=c[r]||{}).width,s=s.position,o=e.options&&e.options.dataLabels;n&&(n.r?i={x:u+n.x*l,y:f+n.y*l,r:n.r*l}:n.d&&((n=n.d).forEach(e=>{"M"===e[0]?(e[1]=u+e[1]*l,e[2]=f+e[2]*l):"A"===e[0]&&(e[1]*=l,e[2]*=l,e[6]=u+e[6]*l,e[7]=f+e[7]*l)}),i={d:n}),s?(s.x=u+s.x*l,s.y=f+s.y*l):s={},b(r)&&(r=Math.round(r*l))),e.shapeArgs=i,s&&i&&(e.plotX=s.x,e.plotY=s.y),r&&i&&(e.dlOptions=A(!0,{style:{width:r}},O(o,!0)?o:void 0)),e.name=e.options.name||t.join("∩")})}}return j.splitter="highcharts-split",j.defaultOptions=A(x.defaultOptions,{borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:!1,colorByPoint:!0,dataLabels:{enabled:!0,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:!0,marker:!1,opacity:.75,showInLegend:!1,legendType:"point",states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:!1},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"},legendSymbol:"rectangle"}),v(j.prototype,{axisTypes:[],directTouch:!0,isCartesian:!1,pointArrayMap:["value"],pointClass:s,utils:h}),i.registerSeriesType("venn",j),m(j,"afterSetOptions",function(e){const t=e.options.states;this.is("venn")&&Object.keys(t).forEach(function(e){t[e].halo=!1})}),j}),t(e,"masters/modules/venn.src.js",[],function(){})});