!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/modules/geoheatmap",["highcharts"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(a){"use strict";var t=a?a._modules:{};function e(t,e,i,o){t.hasOwnProperty(e)||(t[e]=o.apply(null,i),"function"==typeof CustomEvent&&a.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Series/GeoHeatmap/GeoHeatmapPoint.js",[t["Core/Utilities.js"],t["Core/Series/SeriesRegistry.js"]],function(t,e){let{prototype:{pointClass:i}}=e.seriesTypes["map"],r=t["isNumber"];return class extends i{applyOptions(t,e){let i=super.applyOptions.call(this,t,e),{lat:o,lon:a}=i.options;var s,n;return r(a)&&r(o)&&({colsize:t=1,rowsize:e=1}=this.series.options,s=a-t/2,n=o-e/2,i.geometry=i.options.geometry={type:"Polygon",coordinates:[[[s,n],[s+t,n],[s+t,n+e],[s,n+e],[s,n]]]}),i}}}),e(t,"Series/InterpolationUtilities.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){let o=t["doc"],{defined:a,pick:s}=e;return{colorFromPoint:function(e,i){let o=i.series.colorAxis;if(o){let t=o.toColor(e||0,i).split(")")[0].split("(")[1].split(",").map(t=>s(parseFloat(t),parseInt(t,10)));return t[3]=255*s(t[3],1),a(e)&&i.visible||(t[3]=0),t}return[0,0,0,0]},getContext:function(t){let{canvas:e,context:i}=t;return e&&i?(i.clearRect(0,0,e.width,e.height),i):(t.canvas=o.createElement("canvas"),t.context=t.canvas.getContext("2d",{willReadFrequently:!0})||void 0,t.context)}}}),e(t,"Series/GeoHeatmap/GeoHeatmapSeries.js",[t["Core/Animation/AnimationUtilities.js"],t["Series/GeoHeatmap/GeoHeatmapPoint.js"],t["Core/Globals.js"],t["Series/InterpolationUtilities.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,i,o,a,s){let{animObject:b,stop:w}=t,n=i["noop"],{colorFromPoint:C,getContext:v}=o,{map:r}=a["seriesTypes"],{addEvent:l,extend:p,isNumber:j,isObject:h,merge:D,pick:I}=s;function m(t){return t-360*Math.floor((t+180)/360)}class d extends r{constructor(){super(...arguments),this.isDirtyCanvas=!0}update(){this.options=D(this.options,arguments[0]),this.getInterpolation().enabled&&(this.isDirtyCanvas=!0,this.points.forEach(t=>{t.graphic&&(t.graphic.destroy(),delete t.graphic)})),super.update.apply(this,arguments)}translate(){this.getInterpolation().enabled&&this.image&&!this.isDirty&&!this.isDirtyData||super.translate.apply(this,arguments)}getInterpolation(){return h(this.options.interpolation)?this.options.interpolation:{blur:1,enabled:this.options.interpolation}}drawPoints(){let d=this.chart.mapView,n=this.options;if(this.getInterpolation().enabled&&d&&this.bounds){let t=this.context||v(this),{canvas:r,colorAxis:e,image:l,chart:p,points:a}=this,[s,h]=[I(n.colsize,1),I(n.rowsize,1)],i=d.projectedUnitsToPixels({x:this.bounds.x1,y:this.bounds.y2}),o=d.projectedUnitsToPixels({x:this.bounds.x2,y:this.bounds.y1});if(r&&t&&e&&i&&o){let n={x:i.x,y:i.y,width:o.x-i.x,height:o.y-i.y};if(this.isDirtyCanvas||this.isDirtyData||"Orthographic"===d.projection.options.name){this.isDirtyCanvas=!0;let e=r.width=1+~~(360/s),i=r.height=1+~~(180/h),o=new Uint8ClampedArray(e*i*4);this.directTouch=!1;for(let t=0;t<a.length;t++){var c=a[t],u=new Uint8ClampedArray(C(c.value,c)),{lon:c,lat:g}=c.options;j(c)&&j(g)&&o.set(u,4*Math.ceil(e*(i-1-(g+90)/h)+(c+180)/s))}var m=this.getInterpolation().blur,m=0===m?1:11*m,y=~~n.width,f=~~n.height,x=new ImageData(o,e,i),m=(r.width=~~(e*m),r.height=~~(i*m),t.putImageData(x,0,0),t.globalCompositeOperation="copy",t.drawImage(r,0,0,x.width,x.height,0,0,r.width,r.height),t.getImageData(0,0,r.width,r.height)),x=new ImageData(this.getProjectedImageData(d,y,f,m,r,n.x,n.y),y,f);t.globalCompositeOperation="copy",r.width=y,r.height=f,t.putImageData(x,0,0)}if(l)if(p.renderer.globalAnimation&&p.hasRendered){let i=Number(l.attr("x")),o=Number(l.attr("y")),a=Number(l.attr("width")),s=Number(l.attr("height")),t=D(b(p.renderer.globalAnimation)),e=t.step;t.step=function(){e&&e.apply(this,arguments),((t,e)=>{l.attr({x:i+(n.x-i)*e.pos,y:o+(n.y-o)*e.pos,width:a+(n.width-a)*e.pos,height:s+(n.height-s)*e.pos})}).apply(this,arguments)},l.attr(D({animator:0},this.isDirtyCanvas?{href:r.toDataURL("image/png",1)}:void 0)).animate({animator:1},t)}else w(l),l.attr(D(n,this.isDirtyCanvas?{href:r.toDataURL("image/png",1)}:void 0));else this.image=p.renderer.image(r.toDataURL("image/png",1)).attr(n).add(this.group);this.isDirtyCanvas=!1}}else super.drawPoints.apply(this,arguments)}getProjectedImageData(i,o,t,a,s,n,r){let l=new Uint8ClampedArray(o*t*4),p=I(i.projection.options.rotation?.[0],0),h=s.width/360,d=-1*s.height/180,c=-1;for(let e=0;e<l.length;e+=4){var u,g=e/4%o;0==g&&c++;let t=i.pixelsToLonLat({x:n+g,y:r+c});t&&(t.lon>-180-p&&t.lon<180-p&&(t.lon=m(t.lon)),u=(g=[t.lon,t.lat])[0]*h+s.width/2,g=g[1]*d+s.height/2,0<=u&&u<=s.width&&0<=g&&g<=s.height&&(g=Math.floor(g)*s.width*4+4*Math.round(u),l[e]=a.data[g],l[e+1]=a.data[1+g],l[e+2]=a.data[2+g],l[e+3]=a.data[3+g]))}return l}searchPoint(t,e){let i=this.chart,o=i.mapView;if(o&&this.bounds&&this.image&&i.tooltip&&i.tooltip.options.enabled)if(!i.pointer.hasDragged&&(+this.image.attr("animator")<=.01||.99<=+this.image.attr("animator"))){var a=o.projectedUnitsToPixels({x:this.bounds.x1,y:this.bounds.y2}),s=o.projectedUnitsToPixels({x:this.bounds.x2,y:this.bounds.y1});if(i.pointer.normalize(t),t.lon&&t.lat&&a&&s&&t.chartX-i.plotLeft>a.x&&t.chartX-i.plotLeft<s.x&&t.chartY-i.plotTop>a.y&&t.chartY-i.plotTop<s.y)return this.searchKDTree({clientX:t.chartX,lon:m(t.lon),lat:t.lat},e,t)}else i.tooltip.destroy()}}return d.defaultOptions=D(r.defaultOptions,{nullColor:"transparent",tooltip:{pointFormat:"Lat: {point.lat}, Lon: {point.lon}, Value: {point.value}<br/>"},borderWidth:0,colsize:1,rowsize:1,stickyTracking:!0,interpolation:{enabled:!1,blur:1}}),l(d,"afterDataClassLegendClick",function(){this.isDirtyCanvas=!0,this.drawPoints()}),p(d.prototype,{type:"geoheatmap",applyJitter:n,pointClass:e,pointArrayMap:["lon","lat","value"],kdAxisArray:["lon","lat"]}),a.registerSeriesType("geoheatmap",d),d}),e(t,"masters/modules/geoheatmap.src.js",[t["Core/Globals.js"]],function(t){return t})});