"use strict";!function(s){"object"==typeof module&&module.exports?module.exports=s.default=s:"function"==typeof define&&define.amd?define("highcharts/modules/solid-gauge",["highcharts","highcharts/highcharts-more"],function(t){return s(t),s.Highcharts=t,s}):s("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function s(t,s,o,e){t.hasOwnProperty(s)||(t[s]=e.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:s,module:t[s]}})))}s(t=t?t._modules:{},"Core/Axis/SolidGaugeAxis.js",[t["Core/Color/Color.js"],t["Core/Utilities.js"]],function(t,s){const n=t["parse"],{extend:o,merge:l}=s;var e;{t=e=e||{};const i={initDataClasses:function(o){let e=this.chart,i,a=0,r=this.options;this.dataClasses=i=[],o.dataClasses.forEach(function(t,s){t=l(t),i.push(t),t.color||("category"===r.dataClassColor?(s=e.options.colors,t.color=s[a++],a===s.length&&(a=0)):t.color=n(r.minColor).tweenTo(n(r.maxColor),s/(o.dataClasses.length-1)))})},initStops:function(t){this.stops=t.stops||[[0,this.options.minColor],[1,this.options.maxColor]],this.stops.forEach(function(t){t.color=n(t[1])})},toColor:function(t,s){var o=this.stops;let e,i,a=this.dataClasses,r,n;if(a){for(n=a.length;n--;)if(r=a[n],e=r.from,o=r.to,(void 0===e||t>=e)&&(void 0===o||t<=o)){i=r.color,s&&(s.dataClass=n);break}}else{for(this.logarithmic&&(t=this.val2lin(t)),t=1-(this.max-t)/(this.max-this.min),n=o.length;n--&&!(t>o[n][0]););e=o[n]||o[n+1],t=1-((o=o[n+1]||e)[0]-t)/(o[0]-e[0]||1),i=e.color.tweenTo(o.color,t)}return i}};t.init=function(t){o(t,i)}}return e}),s(t,"Series/SolidGauge/SolidGaugeSeriesDefaults.js",[],function(){return{colorByPoint:!0,dataLabels:{y:0}}}),s(t,"Series/SolidGauge/SolidGaugeSeries.js",[t["Extensions/BorderRadius.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Axis/SolidGaugeAxis.js"],t["Series/SolidGauge/SolidGaugeSeriesDefaults.js"],t["Core/Utilities.js"]],function(p,t,s,o,e){const{gauge:i,pie:{prototype:a}}=t["seriesTypes"],{clamp:f,extend:m,isNumber:C,merge:r,pick:R,pInt:A}=e;class n extends i{constructor(){super(...arguments),this.thresholdAngleRad=this.startAngleRad=this.yAxis=this.axis=this.options=this.points=this.data=void 0}translate(){const t=this.yAxis;s.init(t),!t.dataClasses&&t.options.dataClasses&&t.initDataClasses(t.options),t.initStops(t.options),i.prototype.translate.call(this)}drawPoints(){const s=this.yAxis,o=s.center,e=this.options,i=this.chart.renderer;var a=e.overshoot,r=e.rounded&&void 0===e.borderRadius,a=C(a)?a/180*Math.PI:0;C(e.threshold)&&(u=s.startAngleRad+s.translate(e.threshold,void 0,void 0,void 0,!0)),this.thresholdAngleRad=R(u,s.startAngleRad);for(const g of this.points)if(!g.isNull){var n=A(R(g.options.radius,e.radius,100))*o[2]/200,l=A(R(g.options.innerRadius,e.innerRadius,60))*o[2]/200,d=Math.min(s.startAngleRad,s.endAngleRad),h=Math.max(s.startAngleRad,s.endAngleRad),u=g.graphic,c=s.startAngleRad+s.translate(g.y,void 0,void 0,void 0,!0);let t=s.toColor(g.y,g);"none"!==(t="none"===t?g.color||this.color||"none":t)&&(g.color=t),c=f(c,d-a,h+a),!1===e.wrap&&(c=f(c,d,h)),h=r?(n-l)/2/n:0,d=Math.min(c,this.thresholdAngleRad)-h,(c=Math.max(c,this.thresholdAngleRad)+h)-d>2*Math.PI&&(c=d+2*Math.PI),h=r?"50%":0,e.borderRadius&&(h=p.optionsToObject(e.borderRadius).radius),g.shapeArgs=l={x:o[0],y:o[1],r:n,innerR:l,start:d,end:c,borderRadius:h},g.startR=n,u?(n=l.d,u.animate(m({fill:t},l)),n&&(l.d=n)):g.graphic=u=i.arc(l).attr({fill:t,"sweep-flag":0}).add(this.group),this.chart.styledMode||("square"!==e.linecap&&u.attr({"stroke-linecap":"round","stroke-linejoin":"round"}),u.attr({stroke:e.borderColor||"none","stroke-width":e.borderWidth||0})),u&&u.addClass(g.getClassName(),!0)}}animate(t){t||(this.startAngleRad=this.thresholdAngleRad,a.animate.call(this,t))}}return n.defaultOptions=r(i.defaultOptions,o),t.registerSeriesType("solidgauge",n),n}),s(t,"masters/modules/solid-gauge.src.js",[],function(){})});