!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/dmi",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t=t?t._modules:{},"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e){var o,i,n,a,s,u=t.seriesTypes.sma.prototype,f=e.defined,y=e.error,d=e.merge;function m(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function g(t,e){var o=[];return(t.pointArrayMap||[]).forEach(function(t){t!==e&&o.push(m(t))}),o}function r(){var o,t,i=this,e=i.linesApiNames,n=i.areaLinesNames,a=i.points,s=i.options,r=i.graph,p={options:{gapSize:s.gapSize}},l=[],h=g(i,i.pointValKey),c=a.length;h.forEach(function(t,e){for(l[e]=[];c--;)o=a[c],l[e].push({x:o.x,plotX:o.plotX,plotY:o[t],isNull:!f(o[t])});c=a.length}),i.userOptions.fillColor&&n.length&&(t=h.indexOf(m(n[0])),t=l[t],n=1===n.length?a:l[h.indexOf(m(n[1]))],h=i.color,i.points=n,i.nextPoints=t,i.color=i.userOptions.fillColor,i.options=d(a,p),i.graph=i.area,i.fillGraph=!0,u.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=h),e.forEach(function(t,e){l[e]?(i.points=l[e],s[t]?i.options=d(s[t].styles,p):y('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],u.drawGraph.call(i),i["graph"+t]=i.graph):y('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=a,i.options=s,i.graph=r,u.drawGraph.call(i)}function p(t){var e=[];if(t=t||this.points,this.fillGraph&&this.nextPoints){if((o=u.getGraphPath.call(this,this.nextPoints))&&o.length){o[0][0]="L";for(var o,e=u.getGraphPath.call(this,t),i=(o=o.slice(0,e.length)).length-1;0<=i;i--)e.push(o[i])}}else e=u.getGraphPath.apply(this,arguments);return e}function l(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){o.push(e[t])}),o}function h(){var i,n=this,t=this.pointArrayMap,a=g(this);u.translate.apply(this,arguments),this.points.forEach(function(o){t.forEach(function(t,e){i=o[t],null!==(i=n.dataModify?n.dataModify.modifyValue(i):i)&&(o[a[e]]=n.yAxis.toPixels(i,!0))})})}return o=o||{},i=[],n=["bottomLine"],a=["top","bottom"],s=["top"],o.compose=function(t){var e;return-1===i.indexOf(t)&&(i.push(t),(e=t.prototype).linesApiNames=e.linesApiNames||n.slice(),e.pointArrayMap=e.pointArrayMap||a.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||s.slice(),e.drawGraph=r,e.getGraphPath=p,e.toYData=l,e.translate=h),t},o}),e(t,"Stock/Indicators/DMI/DMIIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o){var i,n,a=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),s=e.seriesTypes.sma,r=o.correctFloat,p=o.extend,y=o.isArray,l=o.merge;function h(){var t=null!==n&&n.apply(this,arguments)||this;return t.options=void 0,t}return a(h,n=s),h.prototype.calculateDM=function(t,e,o){var i=t[e][1],n=t[e][2],a=t[e-1][1];return t=t[e-1][2],r(t-n<i-a?o?Math.max(i-a,0):0:o?0:Math.max(t-n,0))},h.prototype.calculateDI=function(t,e){return t/e*100},h.prototype.calculateDX=function(t,e){return r(Math.abs(t-e)/Math.abs(t+e)*100)},h.prototype.smoothValues=function(t,e,o){return r(t-t/o+e)},h.prototype.getTR=function(t,e){return r(Math.max(t[1]-t[2],e?Math.abs(t[1]-e[3]):0,e?Math.abs(t[2]-e[3]):0))},h.prototype.getValues=function(t,e){e=e.period;var o=t.xData,i=(t=t.yData)?t.length:0,n=[],a=[],s=[];if(!(o.length<=e)&&y(t[0])&&4===t[0].length){for(var r,p,l,h=0,c=0,u=0,f=1;f<i;f++)f<=e?(h+=r=this.calculateDM(t,f,!0),c+=p=this.calculateDM(t,f),u+=l=this.getTR(t[f],t[f-1]),f===e&&(l=this.calculateDI(h,u),p=this.calculateDI(c,u),r=this.calculateDX(h,c),n.push([o[f],r,l,p]),a.push(o[f]),s.push([r,l,p]))):(r=this.calculateDM(t,f,!0),p=this.calculateDM(t,f),l=this.getTR(t[f],t[f-1]),h=this.smoothValues(h,r,e),c=this.smoothValues(c,p,e),u=this.smoothValues(u,l,e),l=this.calculateDI(h,u),p=this.calculateDI(c,u),r=this.calculateDX(h,c),n.push([o[f],r,l,p]),a.push(o[f]),s.push([r,l,p]));return{values:n,xData:a,yData:s}}},h.defaultOptions=l(s.defaultOptions,{params:{index:void 0},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">DX</span>: {point.y}<br/><span style="color: {point.series.options.plusDILine.styles.lineColor}">+DI</span>: {point.plusDI}<br/><span style="color: {point.series.options.minusDILine.styles.lineColor}">-DI</span>: {point.minusDI}<br/>'},plusDILine:{styles:{lineWidth:1,lineColor:"#06b535"}},minusDILine:{styles:{lineWidth:1,lineColor:"#f21313"}},dataGrouping:{approximation:"averages"}}),p((o=h).prototype,{areaLinesNames:[],nameBase:"DMI",linesApiNames:["plusDILine","minusDILine"],pointArrayMap:["y","plusDI","minusDI"],parallelArrays:["x","y","plusDI","minusDI"],pointValKey:"y"}),t.compose(o),e.registerSeriesType("dmi",o),o}),e(t,"masters/indicators/dmi.src.js",[],function(){})});