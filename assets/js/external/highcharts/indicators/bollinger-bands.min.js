!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/bollinger-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function e(t,e,i,o){t.hasOwnProperty(e)||(t[e]=o.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(e,n){var a;let m=e.seriesTypes["sma"]["prototype"],{defined:y,error:g,merge:b}=n;{e=a=a||{};let t=[],i=["bottomLine"],o=["top","bottom"],s=["top"];function x(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function v(t,e){let i=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&i.push(x(t))}),i}function r(){let i=this,t=i.pointValKey,e=i.linesApiNames,o=i.areaLinesNames,s=i.points,n=i.options,a=i.graph,r={options:{gapSize:n.gapSize}},p=[],l=v(i,t),h=s.length,d;var c,u,f;l.forEach((t,e)=>{for(p[e]=[];h--;)d=s[h],p[e].push({x:d.x,plotX:d.plotX,plotY:d[t],isNull:!y(d[t])});h=s.length}),i.userOptions.fillColor&&o.length&&(c=l.indexOf(x(o[0])),c=p[c],u=1===o.length?s:p[l.indexOf(x(o[1]))],f=i.color,i.points=u,i.nextPoints=c,i.color=i.userOptions.fillColor,i.options=b(s,r),i.graph=i.area,i.fillGraph=!0,m.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=f),e.forEach((t,e)=>{p[e]?(i.points=p[e],n[t]?i.options=b(n[t].styles,r):g('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],m.drawGraph.call(i),i["graph"+t]=i.graph):g('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=s,i.options=n,i.graph=a,m.drawGraph.call(i)}function p(t){let e,i=[],o;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=m.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",i=m.getGraphPath.call(this,t);for(let t=(o=e.slice(0,i.length)).length-1;0<=t;t--)i.push(o[t])}}else i=m.getGraphPath.apply(this,arguments);return i}function l(e){let i=[];return(this.pointArrayMap||[]).forEach(t=>{i.push(e[t])}),i}function h(){let t=this.pointArrayMap,o,s;o=v(this),m.translate.apply(this,arguments),this.points.forEach(i=>{t.forEach((t,e)=>{s=i[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(i[o[e]]=this.yAxis.toPixels(s,!0))})})}e.compose=function(e){if(n.pushUnique(t,e)){let t=e.prototype;t.linesApiNames=t.linesApiNames||i.slice(),t.pointArrayMap=t.pointArrayMap||o.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||s.slice(),t.drawGraph=r,t.getGraphPath=p,t.toYData=l,t.translate=h}return e}}return a}),e(t,"Stock/Indicators/BB/BBIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,v,e){let i=v.seriesTypes["sma"],{extend:o,isArray:C,merge:s}=e;class n extends i{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}init(){v.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=s({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){let i,o,s,n,a,r,p,l,h,d=e.period,c=e.standardDeviation,u=[],f=[],m=t.xData,y=t.yData,g=y?y.length:0,b=[];if(!(m.length<d)){var x=C(y[0]);for(h=d;h<=g;h++)a=m.slice(h-d,h),r=y.slice(h-d,h),n=(l=v.seriesTypes.sma.prototype.getValues.call(this,{xData:a,yData:r},e)).xData[0],o=(i=l.yData[0])+c*(p=function(t,e,i,o){let s=t.length,n=0,a,r=0;for(;n<s;n++)r+=(a=(i?t[n][e]:t[n])-o)*a;return Math.sqrt(r/=s-1)}(r,e.index,x,i)),s=i-c*p,b.push([n,o,i,s]),u.push(n),f.push([o,i,s]);return{values:b,xData:u,yData:f}}}}return n.defaultOptions=s(i.defaultOptions,{params:{period:20,standardDeviation:2,index:3},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"}}),o(n.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","standardDeviation"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),t.compose(n),v.registerSeriesType("bb",n),n}),e(t,"masters/indicators/bollinger-bands.src.js",[],function(){})});