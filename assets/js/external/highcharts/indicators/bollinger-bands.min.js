"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/bollinger-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t=t?t._modules:{},"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o){const d=t.seriesTypes["sma"]["prototype"],{defined:u,error:f,merge:m}=o;var e;{function y(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function g(t,e){const o=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&o.push(y(t))}),o}function i(){const o=this,t=o.linesApiNames;var e=o.areaLinesNames;const i=o.points,s=o.options,n=o.graph,a={options:{gapSize:s.gapSize}},r=[];var p,l=g(o,o.pointValKey);let h=i.length,c;l.forEach((t,e)=>{for(r[e]=[];h--;)c=i[h],r[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!u(c[t])});h=i.length}),o.userOptions.fillColor&&e.length&&(p=l.indexOf(y(e[0])),p=r[p],e=1===e.length?i:r[l.indexOf(y(e[1]))],l=o.color,o.points=e,o.nextPoints=p,o.color=o.userOptions.fillColor,o.options=m(i,a),o.graph=o.area,o.fillGraph=!0,d.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=l),t.forEach((t,e)=>{r[e]?(o.points=r[e],s[t]?o.options=m(s[t].styles,a):f('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+t],d.drawGraph.call(o),o["graph"+t]=o.graph):f('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=i,o.options=s,o.graph=n,d.drawGraph.call(o)}function s(t){var e;let o=[];if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=d.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",o=d.getGraphPath.call(this,t);for(let t=(e=e.slice(0,o.length)).length-1;0<=t;t--)o.push(e[t])}}else o=d.getGraphPath.apply(this,arguments);return o}function n(e){const o=[];return(this.pointArrayMap||[]).forEach(t=>{o.push(e[t])}),o}function a(){const t=this.pointArrayMap;let i,s;i=g(this),d.translate.apply(this,arguments),this.points.forEach(o=>{t.forEach((t,e)=>{s=o[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(o[i[e]]=this.yAxis.toPixels(s,!0))})})}t=e=e||{};const r=[],p=["bottomLine"],l=["top","bottom"],h=["top"];t.compose=function(t){if(o.pushUnique(r,t)){const e=t.prototype;e.linesApiNames=e.linesApiNames||p.slice(),e.pointArrayMap=e.pointArrayMap||l.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||h.slice(),e.drawGraph=i,e.getGraphPath=s,e.toYData=n,e.translate=a}return t}}return e}),e(t,"Stock/Indicators/BB/BBIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,m,e){const o=m.seriesTypes["sma"],{extend:i,isArray:y,merge:s}=e;class n extends o{constructor(){super(...arguments),this.points=this.options=this.data=void 0}init(){m.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=s({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(o,i){const t=i.period,e=i.standardDeviation,s=[],n=[],a=o.xData,r=(o=o.yData)?o.length:0,p=[];let l;if(!(a.length<t)){var h=y(o[0]);for(l=t;l<=r;l++){var c=a.slice(l-t,l),d=o.slice(l-t,l),c=(u=m.seriesTypes.sma.prototype.getValues.call(this,{xData:c,yData:d},i)).xData[0],u=u.yData[0];{const o=d.length;let t=0,e=0;for(;t<o;t++){var f=(h?d[t][i.index]:d[t])-u;e+=f*f}f=Math.sqrt(e/(o-1))}d=u+e*f,f=u-e*f,p.push([c,d,u,f]),s.push(c),n.push([d,u,f])}return{values:p,xData:s,yData:n}}}}return n.defaultOptions=s(o.defaultOptions,{params:{period:20,standardDeviation:2,index:3},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"}}),i(n.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","standardDeviation"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),t.compose(n),m.registerSeriesType("bb",n),n}),e(t,"masters/indicators/bollinger-bands.src.js",[],function(){})});