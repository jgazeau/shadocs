!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,i,o){e.hasOwnProperty(t)||(e[t]=o.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Stock/Indicators/MultipleLinesComposition.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(t,n){var r;let f=t.seriesTypes["sma"]["prototype"],{defined:y,error:g,merge:C}=n;{t=r=r||{};let e=[],i=["bottomLine"],o=["top","bottom"],s=["top"];function A(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function x(e,t){let i=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&i.push(A(e))}),i}function a(){let i=this,e=i.pointValKey,t=i.linesApiNames,o=i.areaLinesNames,s=i.points,n=i.options,r=i.graph,a={options:{gapSize:n.gapSize}},p=[],l=x(i,e),h=s.length,d;var c,u,m;l.forEach((e,t)=>{for(p[t]=[];h--;)d=s[h],p[t].push({x:d.x,plotX:d.plotX,plotY:d[e],isNull:!y(d[e])});h=s.length}),i.userOptions.fillColor&&o.length&&(c=l.indexOf(A(o[0])),c=p[c],u=1===o.length?s:p[l.indexOf(A(o[1]))],m=i.color,i.points=u,i.nextPoints=c,i.color=i.userOptions.fillColor,i.options=C(s,a),i.graph=i.area,i.fillGraph=!0,f.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=m),t.forEach((e,t)=>{p[t]?(i.points=p[t],n[e]?i.options=C(n[e].styles,a):g('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+e],f.drawGraph.call(i),i["graph"+e]=i.graph):g('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=s,i.options=n,i.graph=r,f.drawGraph.call(i)}function p(e){let t,i=[],o;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=f.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",i=f.getGraphPath.call(this,e);for(let e=(o=t.slice(0,i.length)).length-1;0<=e;e--)i.push(o[e])}}else i=f.getGraphPath.apply(this,arguments);return i}function l(t){let i=[];return(this.pointArrayMap||[]).forEach(e=>{i.push(t[e])}),i}function h(){let e=this.pointArrayMap,o,s;o=x(this),f.translate.apply(this,arguments),this.points.forEach(i=>{e.forEach((e,t)=>{s=i[e],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(i[o[t]]=this.yAxis.toPixels(s,!0))})})}t.compose=function(t){if(n.pushUnique(e,t)){let e=t.prototype;e.linesApiNames=e.linesApiNames||i.slice(),e.pointArrayMap=e.pointArrayMap||o.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||s.slice(),e.drawGraph=a,e.getGraphPath=p,e.toYData=l,e.translate=h}return t}}return r}),t(e,"Stock/Indicators/KeltnerChannels/KeltnerChannelsIndicator.js",[e["Stock/Indicators/MultipleLinesComposition.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,x,t){let i=x.seriesTypes["sma"],{correctFloat:v,extend:o,merge:s}=t;class n extends i{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}init(){x.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=s({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(e,t){let i,o,s,n,r,a,p,l=t.period,h=t.periodATR,d=t.multiplierATR,c=t.index,u=e.yData,m=u?u.length:0,f=[],y=x.seriesTypes.ema.prototype.getValues(e,{period:l,index:c}),g=x.seriesTypes.atr.prototype.getValues(e,{period:h}),C=[],A=[];if(!(m<l)){for(p=l;p<=m;p++)r=y.values[p-l],a=g.values[p-h],n=r[0],o=v(r[1]+d*a[1]),s=v(r[1]-d*a[1]),i=r[1],f.push([n,o,i,s]),C.push(n),A.push([o,i,s]);return{values:f,xData:C,yData:A}}}}return n.defaultOptions=s(i.defaultOptions,{params:{index:0,period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1}),o(n.prototype,{nameBase:"Keltner Channels",areaLinesNames:["top","bottom"],nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),e.compose(n),x.registerSeriesType("keltnerchannels",n),n}),t(e,"masters/indicators/keltner-channels.src.js",[],function(){})});