!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/macd",["highcharts","highcharts/modules/stock"],function(o){return t(o),t.Highcharts=o,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(o){function t(o,t,e,s){o.hasOwnProperty(t)||(o[t]=s.apply(null,e),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:o[t]}})))}t(o=o?o._modules:{},"Stock/Indicators/MACD/MACDIndicator.js",[o["Core/Globals.js"],o["Core/Series/SeriesRegistry.js"],o["Core/Utilities.js"]],function(o,l,t){var s,i,e=this&&this.__extends||(s=function(o,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,t){o.__proto__=t}||function(o,t){for(var e in t)t.hasOwnProperty(e)&&(o[e]=t[e])})(o,t)},function(o,t){function e(){this.constructor=o}s(o,t),o.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}),n=o.noop,r=l.seriesTypes.sma,a=t.extend,h=t.correctFloat,c=t.defined,p=t.merge;function d(){var o=null!==i&&i.apply(this,arguments)||this;return o.data=void 0,o.options=void 0,o.points=void 0,o.currentLineZone=void 0,o.graphmacd=void 0,o.graphsignal=void 0,o.macdZones=void 0,o.signalZones=void 0,o}return e(d,i=r),d.prototype.init=function(){l.seriesTypes.sma.prototype.init.apply(this,arguments);var o=this.color,t=this.userOptions._colorIndex;this.options&&(c(this.userOptions._colorIndex)&&(this.options.signalLine&&this.options.signalLine.styles&&!this.options.signalLine.styles.lineColor&&(this.userOptions._colorIndex++,this.getCyclic("color",void 0,this.chart.options.colors),this.options.signalLine.styles.lineColor=this.color),this.options.macdLine&&this.options.macdLine.styles&&!this.options.macdLine.styles.lineColor&&(this.userOptions._colorIndex++,this.getCyclic("color",void 0,this.chart.options.colors),this.options.macdLine.styles.lineColor=this.color)),this.macdZones={zones:this.options.macdLine.zones,startIndex:0},this.signalZones={zones:this.macdZones.zones.concat(this.options.signalLine.zones),startIndex:this.macdZones.zones.length},this.resetZones=!0),this.color=o,this.userOptions._colorIndex=t},d.prototype.toYData=function(o){return[o.y,o.signal,o.MACD]},d.prototype.translate=function(){var s=this,i=["plotSignal","plotMACD"];o.seriesTypes.column.prototype.translate.apply(s),s.points.forEach(function(e){[e.signal,e.MACD].forEach(function(o,t){null!==o&&(e[i[t]]=s.yAxis.toPixels(o,!0))})})},d.prototype.destroy=function(){this.graph=null,this.graphmacd=this.graphmacd&&this.graphmacd.destroy(),this.graphsignal=this.graphsignal&&this.graphsignal.destroy(),l.seriesTypes.sma.prototype.destroy.apply(this,arguments)},d.prototype.drawGraph=function(){for(var o,e=this,t=e.points,s=t.length,i=e.options,n=e.zones,r={options:{gapSize:i.gapSize}},a=[[],[]];s--;)o=t[s],c(o.plotMACD)&&a[0].push({plotX:o.plotX,plotY:o.plotMACD,isNull:!c(o.plotMACD)}),c(o.plotSignal)&&a[1].push({plotX:o.plotX,plotY:o.plotSignal,isNull:!c(o.plotMACD)});["macd","signal"].forEach(function(o,t){e.points=a[t],e.options=p(i[o+"Line"].styles,r),e.graph=e["graph"+o],e.currentLineZone=o+"Zones",e.zones=e[e.currentLineZone].zones,l.seriesTypes.sma.prototype.drawGraph.call(e),e["graph"+o]=e.graph}),e.points=t,e.options=i,e.zones=n,e.currentLineZone=null},d.prototype.getZonesGraphs=function(o){var t=i.prototype.getZonesGraphs.call(this,o),e=t;return this.currentLineZone&&((e=t.splice(this[this.currentLineZone].startIndex+1)).length?e.splice(0,0,o[0]):e=[o[0]]),e},d.prototype.applyZones=function(){var o=this.zones;this.zones=this.signalZones.zones,l.seriesTypes.sma.prototype.applyZones.call(this),this.graphmacd&&this.options.macdLine.zones.length&&this.graphmacd.hide(),this.zones=o},d.prototype.getValues=function(o,t){var e=t.longPeriod-t.shortPeriod,s=0,i=[],n=[],r=[];if(!(o.xData.length<t.longPeriod+t.signalPeriod)){var a=l.seriesTypes.ema.prototype.getValues(o,{period:t.shortPeriod,index:t.index}),p=l.seriesTypes.ema.prototype.getValues(o,{period:t.longPeriod,index:t.index}),a=a.values,p=p.values;for(o=0;o<=a.length;o++)c(p[o])&&c(p[o][1])&&c(a[o+e])&&c(a[o+e][0])&&i.push([a[o+e][0],0,null,a[o+e][1]-p[o][1]]);for(o=0;o<i.length;o++)n.push(i[o][0]),r.push([0,null,i[o][3]]);for(t=(t=l.seriesTypes.ema.prototype.getValues({xData:n,yData:r},{period:t.signalPeriod,index:2})).values,o=0;o<i.length;o++)i[o][0]>=t[0][0]&&(i[o][2]=t[s][1],r[o]=[0,t[s][1],i[o][3]],null===i[o][3]?(i[o][1]=0,r[o][0]=0):(i[o][1]=h(i[o][3]-t[s][1]),r[o][0]=h(i[o][3]-t[s][1])),s++);return{values:i,xData:n,yData:r}}},d.defaultOptions=p(r.defaultOptions,{params:{shortPeriod:12,longPeriod:26,signalPeriod:9,period:26},signalLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},macdLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},threshold:0,groupPadding:.1,pointPadding:.1,crisp:!1,states:{hover:{halo:{size:0}}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>Value: {point.MACD}<br/>Signal: {point.signal}<br/>Histogram: {point.y}<br/>'},dataGrouping:{approximation:"averages"},minPointLength:0}),a((t=d).prototype,{nameComponents:["longPeriod","shortPeriod","signalPeriod"],pointArrayMap:["y","signal","MACD"],parallelArrays:["x","y","signal","MACD"],pointValKey:"y",markerAttribs:n,getColumnMetrics:o.seriesTypes.column.prototype.getColumnMetrics,crispCol:o.seriesTypes.column.prototype.crispCol,drawPoints:o.seriesTypes.column.prototype.drawPoints}),l.registerSeriesType("macd",t),t}),t(o,"masters/indicators/macd.src.js",[],function(){})});