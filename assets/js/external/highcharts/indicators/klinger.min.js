"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/klinger",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){function t(e,t,i,o){e.hasOwnProperty(t)||(e[t]=o.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e=e?e._modules:{},"Stock/Indicators/MultipleLinesComposition.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,i){const u=e.seriesTypes["sma"]["prototype"],{defined:g,error:d,merge:f}=i;var t;{function m(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function y(e,t){const i=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&i.push(m(e))}),i}function o(){const i=this,e=i.linesApiNames;var t=i.areaLinesNames;const o=i.points,s=i.options,r=i.graph,a={options:{gapSize:s.gapSize}},n=[];var l,p=y(i,i.pointValKey);let h=o.length,c;p.forEach((e,t)=>{for(n[t]=[];h--;)c=o[h],n[t].push({x:c.x,plotX:c.plotX,plotY:c[e],isNull:!g(c[e])});h=o.length}),i.userOptions.fillColor&&t.length&&(l=p.indexOf(m(t[0])),l=n[l],t=1===t.length?o:n[p.indexOf(m(t[1]))],p=i.color,i.points=t,i.nextPoints=l,i.color=i.userOptions.fillColor,i.options=f(o,a),i.graph=i.area,i.fillGraph=!0,u.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=p),e.forEach((e,t)=>{n[t]?(i.points=n[t],s[e]?i.options=f(s[e].styles,a):d('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+e],u.drawGraph.call(i),i["graph"+e]=i.graph):d('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=o,i.options=s,i.graph=r,u.drawGraph.call(i)}function s(e){var t;let i=[];if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=u.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",i=u.getGraphPath.call(this,e);for(let e=(t=t.slice(0,i.length)).length-1;0<=e;e--)i.push(t[e])}}else i=u.getGraphPath.apply(this,arguments);return i}function r(t){const i=[];return(this.pointArrayMap||[]).forEach(e=>{i.push(t[e])}),i}function a(){const e=this.pointArrayMap;let o,s;o=y(this),u.translate.apply(this,arguments),this.points.forEach(i=>{e.forEach((e,t)=>{s=i[e],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(i[o[t]]=this.yAxis.toPixels(s,!0))})})}e=t=t||{};const n=[],l=["bottomLine"],p=["top","bottom"],h=["top"];e.compose=function(e){if(i.pushUnique(n,e)){const t=e.prototype;t.linesApiNames=t.linesApiNames||l.slice(),t.pointArrayMap=t.pointArrayMap||p.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||h.slice(),t.drawGraph=o,t.getGraphPath=s,t.toYData=r,t.translate=a}return e}}return t}),t(e,"Stock/Indicators/Klinger/KlingerIndicator.js",[e["Stock/Indicators/MultipleLinesComposition.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t,i){const{ema:n,sma:o}=t.seriesTypes,{correctFloat:v,error:s,extend:r,isArray:a,merge:l}=i;class p extends o{constructor(){super(...arguments),this.volumeSeries=this.options=this.points=this.data=void 0}calculateTrend(e,t){return e[t][1]+e[t][2]+e[t][3]>e[t-1][1]+e[t-1][2]+e[t-1][3]?1:-1}isValidData(e){var t=this.chart;const i=this.options,o=this.linkedParent;return e=a(e)&&4===e.length,(t=this.volumeSeries||(this.volumeSeries=t.get(i.params.volumeSeriesID)))||s("Series "+i.params.volumeSeriesID+" not found! Check `volumeSeriesID`.",!0,o.chart),!(![o,t].every(function(e){return e&&e.xData&&e.xData.length>=i.params.slowAvgPeriod})||!e)}getCM(e,t,i,o,s){return v(t+(i===o?e:s))}getDM(e,t){return v(e-t)}getVolumeForce(e){const t=[];var i;let o=1;var s=0;let r=e[0][1]-e[0][2];var a,n=0;for(o;o<e.length;o++)a=this.calculateTrend(e,o),i=this.getDM(e[o][1],e[o][2]),s=this.getCM(s,i,a,n,r),n=this.volumeSeries.yData[o]*a*Math.abs(2*(i/s-1))*100,t.push([n]),n=a,r=i;return t}getEMA(e,t,i,o,s,r,a){return n.prototype.calculateEma(a||[],e,void 0===r?1:r,o,t,void 0===s?-1:s,i)}getSMA(e,t,i){return n.prototype.accumulatePeriodPoints(e,t,i)/e}getValues(e,t){const i=[],o=e.xData,s=(e=e.yData,[]),r=[],a=[];var n;let l=0,p=0,h=void 0,c=void 0,u=null;if(this.isValidData(e[0])){var g=this.getVolumeForce(e),d=this.getSMA(t.fastAvgPeriod,0,g),f=this.getSMA(t.slowAvgPeriod,0,g),m=2/(t.fastAvgPeriod+1),y=2/(t.slowAvgPeriod+1);for(l;l<e.length;l++)l>=t.fastAvgPeriod&&(h=p=this.getEMA(g,h,d,m,0,l,o)[1]),l>=t.slowAvgPeriod&&(c=n=this.getEMA(g,c,f,y,0,l,o)[1],n=v(p-n),a.push(n),a.length>=t.signalPeriod&&(u=a.slice(-t.signalPeriod).reduce((e,t)=>e+t)/t.signalPeriod),i.push([o[l],n,u]),s.push(o[l]),r.push([n,u]));return{values:i,xData:s,yData:r}}}}return p.defaultOptions=l(o.defaultOptions,{params:{fastAvgPeriod:34,slowAvgPeriod:55,signalPeriod:13,volumeSeriesID:"volume"},signalLine:{styles:{lineWidth:1,lineColor:"#ff0000"}},dataGrouping:{approximation:"averages"},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">Klinger</span>: {point.y}<br/><span style="color: {point.series.options.signalLine.styles.lineColor}">Signal</span>: {point.signal}<br/>'}}),r(p.prototype,{areaLinesNames:[],linesApiNames:["signalLine"],nameBase:"Klinger",nameComponents:["fastAvgPeriod","slowAvgPeriod"],pointArrayMap:["y","signal"],parallelArrays:["x","y","signal"],pointValKey:"y"}),e.compose(p),t.registerSeriesType("klinger",p),p}),t(e,"masters/indicators/klinger.src.js",[],function(){})});