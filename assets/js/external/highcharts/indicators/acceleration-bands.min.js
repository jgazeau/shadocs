"use strict";!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,i,a){t.hasOwnProperty(e)||(t[e]=a.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t=t?t._modules:{},"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,i){const d=t.seriesTypes["sma"]["prototype"],{defined:u,error:f,merge:m}=i;var e;{function y(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function g(t,e){const i=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&i.push(y(t))}),i}function a(){const i=this,t=i.linesApiNames;var e=i.areaLinesNames;const a=i.points,o=i.options,s=i.graph,n={options:{gapSize:o.gapSize}},r=[];var p,l=g(i,i.pointValKey);let h=a.length,c;l.forEach((t,e)=>{for(r[e]=[];h--;)c=a[h],r[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!u(c[t])});h=a.length}),i.userOptions.fillColor&&e.length&&(p=l.indexOf(y(e[0])),p=r[p],e=1===e.length?a:r[l.indexOf(y(e[1]))],l=i.color,i.points=e,i.nextPoints=p,i.color=i.userOptions.fillColor,i.options=m(a,n),i.graph=i.area,i.fillGraph=!0,d.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=l),t.forEach((t,e)=>{r[e]?(i.points=r[e],o[t]?i.options=m(o[t].styles,n):f('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],d.drawGraph.call(i),i["graph"+t]=i.graph):f('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=a,i.options=o,i.graph=s,d.drawGraph.call(i)}function o(t){var e;let i=[];if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=d.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",i=d.getGraphPath.call(this,t);for(let t=(e=e.slice(0,i.length)).length-1;0<=t;t--)i.push(e[t])}}else i=d.getGraphPath.apply(this,arguments);return i}function s(e){const i=[];return(this.pointArrayMap||[]).forEach(t=>{i.push(e[t])}),i}function n(){const t=this.pointArrayMap;let a,o;a=g(this),d.translate.apply(this,arguments),this.points.forEach(i=>{t.forEach((t,e)=>{o=i[t],null!==(o=this.dataModify?this.dataModify.modifyValue(o):o)&&(i[a[e]]=this.yAxis.toPixels(o,!0))})})}t=e=e||{};const r=[],p=["bottomLine"],l=["top","bottom"],h=["top"];t.compose=function(t){if(i.pushUnique(r,t)){const e=t.prototype;e.linesApiNames=e.linesApiNames||p.slice(),e.pointArrayMap=e.pointArrayMap||l.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||h.slice(),e.drawGraph=a,e.getGraphPath=o,e.toYData=s,e.translate=n}return t}}return e}),e(t,"Stock/Indicators/ABands/ABandsIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,i){const a=e.seriesTypes["sma"],{correctFloat:y,extend:o,merge:s}=i;class n extends a{constructor(){super(...arguments),this.points=this.options=this.data=void 0}getValues(t,e){var i,a,o,s,n=e.period,r=e.factor;e=e.index;const p=t.xData,l=(t=t.yData)?t.length:0,h=[],c=[],d=[],u=[],f=[];let m;if(!(l<n)){for(m=0;m<=l;m++)m<l&&(i=t[m][2],o=t[m][1],a=r,i=y(o-i)/(y(o+i)/2)*1e3*a,h.push(t[m][1]*y(1+2*i)),c.push(t[m][2]*y(1-2*i))),m>=n&&(i=p.slice(m-n,m),s=t.slice(m-n,m),a=super.getValues.call(this,{xData:i,yData:h.slice(m-n,m)},{period:n}),o=super.getValues.call(this,{xData:i,yData:c.slice(m-n,m)},{period:n}),i=(s=super.getValues.call(this,{xData:i,yData:s},{period:n,index:e})).xData[0],a=a.yData[0],o=o.yData[0],s=s.yData[0],d.push([i,a,s,o]),u.push(i),f.push([a,s,o]));return{values:d,xData:u,yData:f}}}}return n.defaultOptions=s(a.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),o(n.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),t.compose(n),e.registerSeriesType("abands",n),n}),e(t,"masters/indicators/acceleration-bands.src.js",[],function(){})});